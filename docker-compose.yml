version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      # region Listeners configuration
      # With the following configuration, Kafka will be accesible:
      # * To the Docker containers inside the VM through `kafka:29092`
      # * To the VM and the host machine through `localhost:9092`
      KAFKA_LISTENERS: INSIDE://kafka:29092,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      # endregion
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Create topics:
      # * topic1: 1 partition,  1 replicas
      # * topic2: 2 partitions, 1 replicas
      KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:2:1"
      # Create topics automatically
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    # https://github.com/provectus/kafka-ui/blob/master/docker-compose.md
    image: provectuslabs/kafka-ui
    #container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
    ports:
      - "8081:8080"
    links:
      - kafka
